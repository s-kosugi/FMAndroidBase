/*==============================================================================*/
/*																				*/
/*	@file title	:	cNeedle.cpp													*/
/*  @brief		:	トゲクラス													*/
/*	@written	:	s.kosugi													*/
/*	@create		:   2020/08/19													*/
/*																				*/
/*==============================================================================*/

#include "cNeedle.h"
#include "..\..\Player\cPlayer.h"

//==========================================================================================
// 定数
//==========================================================================================
const int	cNeedle::PRIORITY = 300;

//==========================================================================================
// コンストラクタ
//==========================================================================================
cNeedle::cNeedle(IBaseObject * parent)
	: IStage(parent, "Needle", "data\\graphic\\needleBall.png")
{
}

//==========================================================================================
// デストラクタ
//==========================================================================================
cNeedle::~cNeedle(void)
{
}

//==========================================================================================
// 初期化
//==========================================================================================
void cNeedle::Initialize(const cVector2 & pos)
{
	SetPriority(PRIORITY);
	// 当たり判定を設定
	m_fDist = GetSpriteSize().x / 2.0f;

	IStage::Initialize(pos);
}

//==========================================================================================
// 更新
//==========================================================================================
void cNeedle::Update(void)
{
	IStage::Update();
}

//==========================================================================================
// プレイヤー衝突時の処理
//==========================================================================================
void cNeedle::HitPlayer(void)
{
	cPlayer* player = (cPlayer*)GetParent()->FindSibling("Player");
	if (player && player->GetState() == cPlayer::STATE::NORMAL)
	{
		// プレイヤーを死亡状態にする
		player->ChangeState(cPlayer::STATE::DEAD);
	}
}
